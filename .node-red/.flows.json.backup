[
    {
        "type": "tab",
        "id": "45b15a79.5038c4",
        "label": "Flow 1"
    },
    {
        "id": "6eeb58af.6c3af8",
        "type": "mqtt-broker",
        "z": "45b15a79.5038c4",
        "broker": "mypi3",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "verifyservercert": true,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "willTopic": "",
        "willQos": "0",
        "willRetain": null,
        "willPayload": "",
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": null,
        "birthPayload": ""
    },
    {
        "id": "c5cc5a9d.88cd48",
        "type": "MySQLdatabase",
        "z": "45b15a79.5038c4",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "pidb",
        "tz": "America/Detroit"
    },
    {
        "id": "e0bd4b08.e2f348",
        "type": "mqtt in",
        "z": "45b15a79.5038c4",
        "name": "mypiv1",
        "topic": "#",
        "broker": "6eeb58af.6c3af8",
        "x": 70,
        "y": 160,
        "wires": [
            [
                "5cf29eb3.e5794"
            ]
        ]
    },
    {
        "id": "5cf29eb3.e5794",
        "type": "function",
        "z": "45b15a79.5038c4",
        "name": "log topics",
        "func": "var myMsg = msg.topic.split(\"/\");\nvar d = new Date();\n\nvar epoch = parseInt(d.getTime() / 1000);\n\nvar myTopic = \"INSERT INTO topics (topic,payload) VALUES ('\"+msg.topic+\"','\"+msg.payload+\"') ON DUPLICATE KEY UPDATE lastseen=FROM_UNIXTIME(\"+epoch+\"), payload='\"+msg.payload+\"';\";\n\nmsg.topic = myTopic;\n\t\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 260,
        "y": 160,
        "wires": [
            [
                "dbdf8f80.825c3",
                "f72e6d02.05f54"
            ]
        ]
    },
    {
        "id": "dbdf8f80.825c3",
        "type": "mysql",
        "z": "45b15a79.5038c4",
        "mydb": "c5cc5a9d.88cd48",
        "name": "",
        "x": 430,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "7cc7ed02.285c64",
        "type": "mqtt in",
        "z": "45b15a79.5038c4",
        "name": "mypi3",
        "topic": "#",
        "broker": "6eeb58af.6c3af8",
        "x": 70,
        "y": 220,
        "wires": [
            [
                "5cf29eb3.e5794"
            ]
        ]
    },
    {
        "id": "f739d5cd.2bddc8",
        "type": "function",
        "z": "45b15a79.5038c4",
        "name": "log vbat",
        "func": "var topics = msg.topic.split(\"/\");\nvar myNode = topics[1]; // grab the middle topic element (node name) \n\nvar myTopic = \"INSERT INTO vbat (topic,battery) \\\n                    VALUES (\\'\"+myNode+\"\\',\\'\"+msg.payload+\"\\') \\\n                    ON DUPLICATE KEY UPDATE battery=\\'\"+msg.payload+\"\\';\";\n\nmsg.topic = myTopic;\n\t\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 260,
        "y": 480,
        "wires": [
            [
                "9c51a148.209fd"
            ]
        ]
    },
    {
        "id": "9c51a148.209fd",
        "type": "mysql",
        "z": "45b15a79.5038c4",
        "mydb": "c5cc5a9d.88cd48",
        "name": "",
        "x": 430,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "bf7553ce.b778c",
        "type": "mqtt in",
        "z": "45b15a79.5038c4",
        "name": "vbat",
        "topic": "+/+/bat",
        "broker": "6eeb58af.6c3af8",
        "x": 70,
        "y": 480,
        "wires": [
            [
                "f739d5cd.2bddc8"
            ]
        ]
    },
    {
        "id": "f72e6d02.05f54",
        "type": "debug",
        "z": "45b15a79.5038c4",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "topic",
        "x": 440,
        "y": 160,
        "wires": []
    },
    {
        "id": "634fec26.dbfe54",
        "type": "inject",
        "z": "45b15a79.5038c4",
        "name": "kicker",
        "topic": "kicker",
        "payload": "",
        "payloadType": "date",
        "repeat": "60",
        "crontab": "",
        "once": true,
        "x": 90,
        "y": 620,
        "wires": [
            [
                "3e9f27ca.7aa538"
            ]
        ]
    },
    {
        "id": "3e9f27ca.7aa538",
        "type": "function",
        "z": "45b15a79.5038c4",
        "name": "check vbat",
        "func": "var myTopic = \"SELECT topic,battery FROM vbat \\\n                    where battery < \\'3.1\\' and (\\\n                    (current_timestamp > date_add(notified, INTERVAL 12 HOUR)) or \\\n                    (notified like \\'0000-00-00 00:00:00\\') \\\n                    );\";\n\n                    \nmsg.topic = myTopic;\nmsg.payload = \"\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 620,
        "wires": [
            [
                "aa30c43b.1def68"
            ]
        ]
    },
    {
        "id": "aa30c43b.1def68",
        "type": "mysql",
        "z": "45b15a79.5038c4",
        "mydb": "c5cc5a9d.88cd48",
        "name": "",
        "x": 430,
        "y": 620,
        "wires": [
            [
                "ace395df.04ccd8"
            ]
        ]
    },
    {
        "id": "ace395df.04ccd8",
        "type": "function",
        "z": "45b15a79.5038c4",
        "name": "prep email",
        "func": "var payload = msg.payload;\nvar msg2 = {payload: \"foo\", topic: \"bar\"};\n\nvar subject = \"âš¡Low battery alert\";\nvar body = \"Heads up, the following modules have a low battery:<br>&nbsp;<br>\";\nvar sql = \"UPDATE vbat SET notified=CURRENT_TIMESTAMP WHERE topic IN ( \";\n\nfunction batteries(item, index) {\n    if (parseInt(item.battery) < 3.0) {\n        body += \"<font color=\\'red\\'>Node: \" + item.topic + \" vbat: \" + item.battery +\"</font><br>\";    \n    } else {\n        body += \"Node: \" + item.topic + \" vbat: \" + item.battery +\"<br>\";\n    }\n    \n    sql += \"\\'\"+ item.topic +\"\\',\";\n}\n\npayload.forEach(batteries);\n\nsql += \"\\'foo\\' );\" // add junk topic and close query\n\nmsg.payload = body;\nmsg.topic = subject;\nmsg.to = \"gordonthree@gmail.com\";\n\nmsg2.topic = sql;\n\n// if the low battery payload is empty, don't send low battery email\n// or update the battery table\nif (payload.length>0) {\n    return [msg, msg2];\n} else {\n    return [null, null];\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 610,
        "y": 620,
        "wires": [
            [
                "d3df2ce9.baaff"
            ],
            [
                "db22931f.f205c"
            ]
        ]
    },
    {
        "id": "d3df2ce9.baaff",
        "type": "e-mail",
        "z": "45b15a79.5038c4",
        "server": "smtp.gmail.com",
        "port": "465",
        "name": "",
        "dname": "gordonthree",
        "x": 810,
        "y": 600,
        "wires": []
    },
    {
        "id": "db22931f.f205c",
        "type": "mysql",
        "z": "45b15a79.5038c4",
        "mydb": "c5cc5a9d.88cd48",
        "name": "",
        "x": 790,
        "y": 640,
        "wires": [
            []
        ]
    }
]